[{"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\index.js":"1","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Footer.js":"2","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\serviceWorker.js":"3","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Header.js":"4","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\HomePage.js":"5","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\LandingPage.js":"6","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Loading.js":"7","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\SearchPage.js":"8","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\PdpPage.js":"9","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Api.js":"10","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\MakeFeatured.js":"11","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\List.js":"12","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Image.js":"13","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\List2.js":"14","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\UpArrow.js":"15","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\SearchBar.js":"16","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Database.js":"17","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\EditData.js":"18","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\PutData.js":"19","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\FilterIcon.js":"20"},{"size":620,"mtime":1629514347325,"results":"21","hashOfConfig":"22"},{"size":272,"mtime":1601399489000,"results":"23","hashOfConfig":"22"},{"size":5227,"mtime":1601399408000,"results":"24","hashOfConfig":"22"},{"size":5913,"mtime":1634349076625,"results":"25","hashOfConfig":"22"},{"size":8262,"mtime":1634347218251,"results":"26","hashOfConfig":"22"},{"size":15918,"mtime":1631674193301,"results":"27","hashOfConfig":"22"},{"size":509,"mtime":1601399489000,"results":"28","hashOfConfig":"22"},{"size":4617,"mtime":1631674258194,"results":"29","hashOfConfig":"22"},{"size":27971,"mtime":1631674416724,"results":"30","hashOfConfig":"22"},{"size":68,"mtime":1601412972000,"results":"31","hashOfConfig":"22"},{"size":1914,"mtime":1631479491238,"results":"32","hashOfConfig":"22"},{"size":3438,"mtime":1634348145292,"results":"33","hashOfConfig":"22"},{"size":1016,"mtime":1631229090672,"results":"34","hashOfConfig":"22"},{"size":2801,"mtime":1622141043784,"results":"35","hashOfConfig":"22"},{"size":707,"mtime":1619571191429,"results":"36","hashOfConfig":"22"},{"size":6036,"mtime":1631674307642,"results":"37","hashOfConfig":"22"},{"size":454,"mtime":1629665167705,"results":"38","hashOfConfig":"22"},{"size":242,"mtime":1631130170256,"results":"39","hashOfConfig":"22"},{"size":3563,"mtime":1631477565010,"results":"40","hashOfConfig":"22"},{"size":4912,"mtime":1631674076451,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1v0d1cu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\index.js",[],["96","97"],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Footer.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Header.js",["98","99","100"],"import React from 'react';\r\nimport { HomePage } from './HomePage';\r\nimport {LandingPage} from './LandingPage';\r\nimport {PdpPage} from './PdpPage';\r\nimport {SearchPage} from './SearchPage';\r\nimport {Loading} from './Loading';\r\nimport {UpArrow} from './UpArrow';\r\nimport {SearchBar} from './SearchBar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n   // Link,\r\n   //useParams\r\n} from \"react-router-dom\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      search:[],\r\n      cat: ``\r\n    };\r\n    this.search = this.search.bind(this);\r\n    this.blur = this.blur.bind(this);\r\n    this.expand = this.expand.bind(this);\r\n    this.close = this.close.bind(this);\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', function(e){\r\n      // console.log(`header.js scroll event`);\r\n      // console.log(window.pageYOffset);\r\n      if(window.pageYOffset >= 208){\r\n        document.getElementsByClassName('back-to-top')[0].style.display = 'block';\r\n      } else {\r\n          document.getElementsByClassName('back-to-top')[0].style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  search(e){\r\n    if(e.keyCode ===  13){\r\n      console.log('enter pressed');\r\n      // console.log(e.target.value);\r\n      // var searchTerm = e.target.value;\r\n      // window.location.hash = `#/search/${searchTerm}`;\r\n      // window.location.reload();\r\n    }\r\n  }\r\n\r\n  blur(e){\r\n    // var searchTerm = e.target.value;\r\n    // window.location.hash = `#/search/${searchTerm}`;\r\n    // window.location.reload();\r\n  }\r\n\r\n  show(e){\r\n    var searchInput =  ``;\r\n    // console.log(e.target);\r\n    // if(e.target.nodeName == 'svg'){\r\n    //   // console.log('it is a svg');\r\n    //   searchInput = e.target.previousSibling;\r\n    //\r\n    // } else if(e.target.nodeName == 'path') {\r\n    //   // console.log('it is a path');\r\n    //   searchInput = e.target.parentNode.previousSibling;\r\n    //\r\n    // }\r\n    if(document.getElementsByClassName('filter-container')[0] !== undefined){\r\n      document.getElementsByClassName('filter-container')[0].style.display = \"none\";\r\n    }\r\n    searchInput = document.getElementById('search-bar');\r\n\r\n    if(searchInput.classList.length !== 1){\r\n      searchInput.classList.add(\"show\");\r\n    } else {\r\n      searchInput.classList.remove(\"show\");\r\n    }\r\n\r\n  }\r\n\r\n  hide(e){\r\n    var searchInput =  ``;\r\n    console.log(e.target);\r\n  }\r\n\r\n  expand(e){\r\n    // console.log('expand function');\r\n    // console.log(e.target);\r\n    var nav = ``;\r\n    if(e.target.nodeName === 'svg'){\r\n      // console.log('it is a svg');\r\n      nav = e.target.nextSibling.nextSibling.nextSibling;\r\n      // console.log(nav);\r\n    } else if(e.target.nodeName === 'path') {\r\n      // console.log('it is a path');\r\n      nav = e.target.parentNode.nextSibling.nextSibling.nextSibling;\r\n      // console.log(nav);\r\n    }\r\n    // console.log(nav.classList);\r\n    nav.classList.add(\"expand\");\r\n  }\r\n\r\n  close(e){\r\n    // console.log(e.target);\r\n    var nav = ``;\r\n    if(e.target.nodeName === 'svg'){\r\n      // console.log('it is a svg');\r\n      nav = e.target.parentNode;\r\n      // console.log(nav);\r\n      // nav.classList.add(\"expand\");\r\n    } else if(e.target.nodeName === 'path') {\r\n      // console.log('it is a path');\r\n      nav = e.target.parentNode.parentNode;\r\n      // console.log(nav);\r\n    } else if(e.target.nodeName === 'A') {\r\n      // console.log('it is a path');\r\n      nav = e.target.parentNode.parentNode.parentNode;\r\n      // console.log(nav);\r\n    }\r\n    nav.classList.remove(\"expand\");\r\n  }\r\n\r\n  render() {\r\n    // console.log(`header state`);\r\n    // console.log(this.state);\r\n    return (\r\n      <React.Fragment>\r\n        <HashRouter>\r\n          <header className=\"header\">\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" onClick={this.expand} />\r\n\r\n            <a href=\"/apps/marvel-comics/\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Marvel-Comics-Logo.svg/1280px-Marvel-Comics-Logo.svg.png\" alt=\"Marvel Logo\" id=\"logo\" data-arr=\"\" /></a>\r\n\r\n            <div className=\"search-bar\">\r\n              <input type=\"text\" placeholder=\"Search\" onKeyUp={this.search} onBlur={this.blur} />\r\n              <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick ={this.show} />\r\n            </div>\r\n\r\n            <nav>\r\n              <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" onClick={this.close} />\r\n              <ul>\r\n                <li><a href=\"/apps/marvel-comics/#/characters\" onClick={this.close}>characters</a></li>\r\n                <li><a href=\"/apps/marvel-comics/#/comics\" onClick={this.close}>comics</a></li>\r\n                <li><a href=\"/apps/marvel-comics/#/events\" onClick={this.close}>events</a></li>\r\n                <li><a href=\"/apps/marvel-comics/#/series\" onClick={this.close}>series</a></li>\r\n                <li><a href=\"/apps/marvel-comics/#/creators\" onClick={this.close}>creators</a></li>\r\n              </ul>\r\n            </nav>\r\n            <SearchBar />\r\n          </header>\r\n\r\n          <section className=\"main\">\r\n              <Loading />\r\n              <Route exact path=\"/\"  component={HomePage} />\r\n              <Route path=\"/:Category/:Id\" component={PdpPage} />\r\n              <Route exact path=\"/:Category/\" component={LandingPage} />\r\n              <Route exact path=\"/search/:searchCat/:searchTerm\" render={(props) => <SearchPage stuff=\"some stuff...\" {...props} /> } />\r\n          </section>\r\n\r\n          <UpArrow />\r\n\r\n        </HashRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\HomePage.js",["101","102","103"],"import React from 'react';\r\nimport { Api } from './Api';\r\nimport { List } from './List';\r\nimport MakeFeatured from './MakeFeatured';\r\nimport Database from './Database';\r\n\r\nexport class HomePage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comics:[],\r\n      characters: [],\r\n      events:[],\r\n      series:[],\r\n    };\r\n    this.getSetData = this.getSetData.bind(this);\r\n  }\r\n\r\n  getSetData($this, theDb, str, theUrl, func) {\r\n    // console.log(theDb, str, theUrl);\r\n    // return new Promise((resolve, reject) => {\r\n\r\n      theDb.allDocs({include_docs: true}).then((docs) => {\r\n        // console.log(`${str} all docs`);\r\n        // console.log(docs);\r\n        return docs;\r\n      }).then((docs) => {\r\n        //check if there is any data in the comics database\r\n        if (docs.total_rows == 0){\r\n          // no comics in the database then ajax get comics\r\n          fetch(theUrl).then(res => res.json()).then((results) => {\r\n            // console.log(`ajax Fetch ${str}`);\r\n            // console.log(results);\r\n            return results;\r\n          }).then((results) => {\r\n            // add _id to each comic and push to array\r\n            var updatedArray = [];\r\n            var theArray = results.data.results;\r\n            theArray.map((obj, i) => {\r\n              var doc = {};\r\n              doc[\"_id\"] = `${str}-${obj.id}`;\r\n              var returnedTarget = Object.assign(obj, doc)\r\n              // console.log(returnedTarget);\r\n              updatedArray.push(returnedTarget);\r\n            });\r\n            return updatedArray;\r\n          }).then((updatedArray) => {\r\n            // push the array to the database\r\n            theDb.bulkDocs(updatedArray).then((items) => {\r\n              // console.log(`${str} bulkDocs`);\r\n              // console.log(items);\r\n              // console.log(updatedArray);\r\n              return updatedArray;\r\n            }).then((updatedArray) => {\r\n              // comics in the Database set the state\r\n              // console.log(`setState ${str} after bulkDocs`);\r\n              func($this, updatedArray);\r\n            });\r\n          });\r\n        } else {\r\n          // console.log(`${str} database not empty just setstate no ajax`);\r\n          var updatedArray = [];\r\n          var theArray = docs.rows;\r\n          theArray.map((obj, i) => {\r\n            updatedArray.push(obj.doc);\r\n          });\r\n          func($this, updatedArray);\r\n        }\r\n      }).catch((err) => {\r\n        console.log(`home page error`);\r\n        console.log(err);\r\n        // func($this, updatedArray);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    var db = Database;\r\n\r\n    // db.comics.destroy().then(function (response) {\r\n    //   // success\r\n    //   console.log(`database destroyed`);\r\n    //   console.log(response);\r\n    // }).catch(function (err) {\r\n    //   console.log(err);\r\n    // });\r\n\r\n    // db.comics.info().then(function (info) {\r\n    //   console.log(info);\r\n    // });\r\n\r\n    let baseURL = `http://gateway.marvel.com/v1/public/`;\r\n\r\n    //get set comics\r\n    let comicsUrl = `${baseURL}comics?apikey=${Api}`;\r\n    this.getSetData(this, db.comics, 'comics', comicsUrl, function($this, list){\r\n      // console.log(`after getSetData comics`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        comics: list\r\n      });\r\n    });\r\n\r\n    //get set characters\r\n    let charactersUrl = `${baseURL}characters?apikey=${Api}`;\r\n    this.getSetData(this, db.characters, 'characters', charactersUrl, function($this, list){\r\n      // console.log(`after getSetData characters`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        characters: list\r\n      });\r\n    });\r\n\r\n    //get set events\r\n    let eventsUrl = `${baseURL}events?apikey=${Api}`;\r\n    this.getSetData(this, db.events, 'events', eventsUrl, function($this, list){\r\n      // console.log(`after getSetData events`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        events: list\r\n      });\r\n    });\r\n\r\n    //get set series\r\n    let seriesUrl = `${baseURL}series?apikey=${Api}`;\r\n    this.getSetData(this, db.series, 'series', seriesUrl, function($this, list){\r\n      // console.log(`after getSetData series`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        series: list\r\n      });\r\n    });\r\n\r\n    //get set creators\r\n    let creatorsUrl = `${baseURL}creators?apikey=${Api}`;\r\n    this.getSetData(this, db.creators, 'creators', creatorsUrl, function($this, list){\r\n      // console.log(`after getSetData creators`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        creators: list\r\n      });\r\n    });\r\n\r\n    //get set stories\r\n    let storiesUrl = `${baseURL}stories?apikey=${Api}`;\r\n    this.getSetData(this, db.stories, 'stories', storiesUrl, function($this, list){\r\n      // console.log(`after getSetData stories`);\r\n      // console.log(list);\r\n      $this.setState({\r\n        stories: list\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\t  // console.log(this.state);\r\n    var randomNum = Math.floor(Math.random() * Math.floor(20));\r\n    var randomNum1 = Math.floor(Math.random() * Math.floor(20));\r\n    var randomNum2 = Math.floor(Math.random() * Math.floor(20));\r\n\t  //console.log(`random numbers`);\r\n\t  //console.log(randomNum);\r\n\r\n    var comicsArr = this.state.comics;\r\n    var comicsLength = comicsArr.length;\r\n    var comic1 = ``;\r\n\t  var comic2 = ``;\r\n    let comics = ``;\r\n    if(comicsLength >= 20){\r\n\t\t  var comic1Title = comicsArr[randomNum1].title;\r\n\t\t  // console.log(comic1Title);\r\n\t\t  comic1 = <MakeFeatured arr={comicsArr} url=\"/apps/marvel-comics/#/comics/\" id=\"true\" number={randomNum1} title={comic1Title} />\r\n\t\t  comic2 = <MakeFeatured arr={comicsArr} url=\"/apps/marvel-comics/#/comics/\" id=\"false\" number={randomNum2} title=\"comics\" />\r\n      comics =  <List url='comics' list={this.state.comics} slider='true'/>\r\n    }\r\n\r\n    var charactersArr = this.state.characters;\r\n    var charactersLength = charactersArr.length;\r\n    var character = '';\r\n    let characters = ``;\r\n    if(charactersLength >= 20){\r\n\t\t  character = <MakeFeatured arr={charactersArr} url=\"/apps/marvel-comics/#/characters/\" id=\"false\" number={randomNum} title=\"characters\" />\r\n      characters =  <List url='characters' list={this.state.characters} slider='true' />\r\n    }\r\n\r\n\t  var seriesArr = this.state.series;\r\n    var seriesLength = seriesArr.length;\r\n    var series = '';\r\n    let seriesUL = ``;\r\n    if(seriesLength >= 20){\r\n\t\t  series = <MakeFeatured arr={seriesArr} url=\"/apps/marvel-comics/#/series/\" id=\"false\" number={randomNum} title=\"series\" />\r\n      seriesUL =  <List url='series' list={this.state.series} slider='true' />\r\n    }\r\n\r\n    var eventsArr = this.state.events;\r\n    var eventsLength = eventsArr.length;\r\n    var event = '';\r\n    let eventsUL = ``;\r\n    if(eventsLength >= 20){\r\n\t\t  event = <MakeFeatured arr={eventsArr} url=\"/apps/marvel-comics/#/events/\" id=\"false\" number={randomNum} title=\"events\" />\r\n      eventsUL =  <List url='events' list={this.state.events} slider='true' />\r\n    }\r\n\r\n\r\n\t  if(comicsLength >= 20 && charactersLength >= 20 && seriesLength >= 20 && eventsLength >= 20) {\r\n\t\t  document.getElementsByClassName('loading')[0].style.display = 'none';\r\n\t\t  var hps = document.getElementsByClassName('hp');\r\n\t\t  //console.log(hps);\r\n\r\n\t\t  for (let val of hps) {\r\n\t\t\t  //console.log(val);\r\n\t\t\t  if(val.className === \"hp top\"){\r\n\t\t\t\t  val.style.display = 'flex';\r\n\t\t\t  } else {\r\n\t\t\t\t  val.style.display = 'block';\r\n\t\t\t  }\r\n\t\t  }\r\n\t  }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"hp top\">\r\n          <div className=\"featured featured_1\">{comic1}</div>\r\n          <div className=\"featured featured_2\">\r\n\t\t\t      <div>{comic2}</div>\r\n\t\t\t      <div>{character}</div>\r\n\t\t\t      <div>{series}</div>\r\n\t\t\t      <div>{event}</div>\r\n          </div>\r\n\t\t    </div>\r\n\r\n        <div className=\"hp\">\r\n          <h2>Comics</h2>\r\n\t\t\t    {comics}\r\n        </div>\r\n\r\n        <div className=\"hp\">\r\n          <h2>Characters</h2>\r\n          {characters}\r\n        </div>\r\n\r\n        <div className=\"hp\">\r\n          <h2>Series</h2>\r\n          {seriesUL}\r\n        </div>\r\n\r\n        <div className=\"hp\">\r\n          <h2>Events</h2>\r\n          {eventsUL}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\LandingPage.js",["104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React from 'react';\r\nimport { Api } from './Api';\r\nimport Image from './Image';\r\n// import { List } from './List';\r\nimport {Loading} from './Loading';\r\nimport Database from './Database';\r\nimport EditData from './EditData';\r\nimport PouchDB from 'pouchdb';\r\nimport {FilterIcon} from './FilterIcon';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport class LandingPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      offset: 0,\r\n      data: [],\r\n      cat: this.props.match.params.Category\r\n    };\r\n    this.getMore = this.getMore.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var offset = Math.floor(Math.random() * 900);\r\n    let cat  = this.props.match.params.Category;\r\n    let baseURL = `http://gateway.marvel.com/v1/public/${cat}?apikey=${Api}`;\r\n\r\n    var dbOffsets = new PouchDB('marvel-offsets');\r\n    dbOffsets.bulkDocs([\r\n      {_id: 'comics', offset: 20},\r\n      {_id: 'characters', offset: 20},\r\n      {_id: 'events', offset: 20},\r\n      {_id: 'series', offset: 20},\r\n    ]);\r\n    // dbOffsets.allDocs({include_docs: true}).then((docs) => {\r\n    //   console.log(`offset database`);\r\n    //   console.log(docs);\r\n    // });\r\n\r\n    var db = Database;\r\n    switch(cat){\r\n      case 'comics':\r\n        // set data\r\n        db.comics.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`comics all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        //set offset\r\n        dbOffsets.get('comics').then((doc) => {\r\n          // handle doc\r\n          console.log(doc);\r\n          this.setState({\r\n            offset: doc.offset\r\n          });\r\n        });\r\n        break;\r\n      case 'characters':\r\n        //set data\r\n        db.characters.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`characters all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        //set offset\r\n        dbOffsets.get('characters').then((doc) => {\r\n          // handle doc\r\n          console.log(doc);\r\n          return doc;\r\n        }).then((doc) => {\r\n          this.setState({\r\n            offset: doc.offset\r\n          });\r\n        });\r\n        break;\r\n      case 'events':\r\n        //set data\r\n        db.events.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`events all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        //set offset\r\n        dbOffsets.get('events').then((doc) => {\r\n          // handle doc\r\n          console.log(doc);\r\n          return doc;\r\n        }).then((doc) => {\r\n          this.setState({\r\n            offset: doc.offset\r\n          });\r\n        });\r\n        break;\r\n      case 'series':\r\n        //set data\r\n        db.series.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`series all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        //set offset\r\n        dbOffsets.get('series').then((doc) => {\r\n          // handle doc\r\n          console.log(doc);\r\n          return doc;\r\n        }).then((doc) => {\r\n          this.setState({\r\n            offset: doc.offset\r\n          });\r\n        });\r\n        break;\r\n      case 'stories':\r\n        db.stories.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`stories all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        break;\r\n      case 'creators':\r\n        db.creators.allDocs({include_docs: true}).then((docs) => {\r\n          console.log(`creators all docs`);\r\n          console.log(docs);\r\n          return docs;\r\n        }).then((docs) => {\r\n          var data = EditData(docs.rows);\r\n          this.setState({\r\n            data: data\r\n          });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n/*\r\n  changeLanding(e){\r\n\t\tconsole.log(`landing changeLanding`);\r\n\t\t//console.log(e);\r\n\t\t//console.log(e.target);\r\n\r\n\t\tlet url = e.target.href;\r\n\t\tlet urlArr = url.split('/');\r\n\t\tlet cat = urlArr[urlArr.length - 2];\r\n\t\tlet id = urlArr[urlArr.length -1];\r\n\t\t//console.log(url, urlArr, cat, id);\r\n\r\n\r\n\t\tlet baseURL = `http://gateway.marvel.com/v1/public/${cat}`;\r\n\r\n\t\t// on page load data\r\n\t\tlet dataURL = `${baseURL}/${id}?apikey=${Api}`;\r\n\t\tfetch(dataURL).then(res => res.json()).then((results) => {\r\n\t\t\tconsole.log(results);\r\n\r\n\t\t\t// this.setState({\r\n\t\t\t// \tdata: results.data.results[0]\r\n\t\t\t// });\r\n\r\n\t\t}, (error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n*/\r\n  getMore(e){\r\n\r\n    console.log(`getMore function`);\r\n    //console.log(e.target);\r\n    var theButton = e.target;\r\n    theButton.style.display = 'none';\r\n    var theLoading = e.target.nextSibling;\r\n    theLoading.style.display = 'block';\r\n    var offset = this.state.offset;\r\n    let cat  = this.props.match.params.Category;\r\n    let baseURL = `http://gateway.marvel.com/v1/public/${cat}?apikey=${Api}&offset=${offset}`;\r\n    var dbOffsets = new PouchDB('marvel-offsets');\r\n\r\n    fetch(baseURL).then(res => res.json()).then((results) => {\r\n      // console.log('ajax from button click landing page');\r\n      console.log(results);\r\n      return results;\r\n    }).then((results) => {\r\n      var db = Database;\r\n      var updatedArray = [];\r\n      var theArray = results.data.results;\r\n      theArray.map((obj, i) => {\r\n        var doc = {};\r\n        doc[\"_id\"] = `${cat}-${obj.id}`;\r\n        var returnedTarget = Object.assign(obj, doc)\r\n        // console.log(returnedTarget);\r\n        updatedArray.push(returnedTarget);\r\n      });\r\n      // console.log(updatedArray);\r\n      // console.log(results.data.limit);\r\n      // console.log(this.state.offset);\r\n      var theOffset =  results.data.limit + this.state.offset;\r\n      // console.log(theOffset);\r\n\r\n      switch(cat){\r\n        case 'comics':\r\n          // set data\r\n          db.comics.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`comics buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.comics.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all comics database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('comics').then((doc) => {\r\n            console.log(`comics offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'comics',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n        case 'characters':\r\n          // set data\r\n          db.characters.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`characters buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.characters.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all characters database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('characters').then((doc) => {\r\n            console.log(`characters offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'characters',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n        case 'events':\r\n          // set data\r\n          db.events.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`events buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.events.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all events database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('events').then((doc) => {\r\n            console.log(`events offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'events',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n        case 'series':\r\n          // set data\r\n          db.series.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`series buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.series.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all series database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('series').then((doc) => {\r\n            console.log(`series offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'series',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n        case 'stories':\r\n          // set data\r\n          db.stories.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`stories buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.stories.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all stories database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('stories').then((doc) => {\r\n            console.log(`stories offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'stories',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n        case 'creators':\r\n          // set data\r\n          db.creators.bulkDocs(updatedArray).then((docs) => {\r\n            console.log(`creators buldDocs`);\r\n            console.log(docs);\r\n            // return updatedArray;\r\n          }).then(() => {\r\n            db.creators.allDocs({include_docs: true}).then((results) => {\r\n              console.log(`geta all creators database`);\r\n              console.log(results);\r\n              return results;\r\n            }).then((results) => {\r\n              var data = [];\r\n              results.rows.map((val, i) => {\r\n                data.push(val.doc);\r\n              });\r\n              this.setState({\r\n                data: data\r\n              });\r\n            });\r\n          });\r\n\r\n          //set offset\r\n          dbOffsets.get('creators').then((doc) => {\r\n            console.log(`creators offset database`);\r\n            console.log(doc);\r\n            dbOffsets.put({\r\n              _id: 'creators',\r\n              _rev: doc._rev,\r\n              offset: theOffset\r\n            });\r\n            return theOffset;\r\n          }).then((theOffset) => {\r\n            this.setState({\r\n              offset: theOffset\r\n            });\r\n          });\r\n            break;\r\n      }\r\n      theButton.style.display = 'block';\r\n      theLoading.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(`landing page state`);\r\n    // console.log(this.state);\r\n    // console.log(this.props.match.params.Category);\r\n\r\n    if(this.state.cat !== this.props.match.params.Category){\r\n      // console.log(`cats don't match`);\r\n      window.location.reload();\r\n    }\r\n\r\n    let li =``;\r\n    let cat  = this.props.match.params.Category;\r\n    if(this.state.data !== undefined){\r\n      // data =  <List url={cat} list={this.state.data} />\r\n      var listItems = this.state.data;\r\n      li = listItems.map(function(val, i){\r\n        let id = val.id;\r\n        let href = `/apps/marvel-comics/#/${cat}/${id}`;\r\n        var name = ``;\r\n        if(cat == 'creators'){\r\n          name = val.fullName;\r\n        } else {\r\n          name = val.name;\r\n          //console.log(name);\r\n          if(name === undefined){\r\n            name = val.title;\r\n          }\r\n        }\r\n\r\n        return(\r\n          <li key={i}>\r\n            <a href={href}>\r\n              <h2>{name}</h2>\r\n              <Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension} />\r\n            </a>\r\n          </li>\r\n        )\r\n      });\r\n    }\r\n\r\n    //document.getElementsByClassName('landing-page')[0].style.display = 'block';\r\n    var landing =  document.getElementsByClassName('landing-page')[0];\r\n    if(landing !== undefined){\r\n      landing.style.display = 'block';\r\n    }\r\n    var loading = document.getElementsByClassName('loading')[0];\r\n    if(loading !== undefined){\r\n      loading.style.display = 'none';\r\n    }\r\n    // <FontAwesomeIcon icon={faCheckSquare} size=\"2x\"/>\r\n    // <FontAwesomeIcon icon={faSquare} size=\"2x\"/>\r\n    // <FontAwesomeIcon icon={faTimesCircle} size=\"2x\"/>\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"landing-page\">\r\n          <h1>{cat}</h1>\r\n          <FilterIcon data={this.state.data} cat={this.state.cat} $this={this}/>\r\n          <ul>\r\n            {li}\r\n          </ul>\r\n          <button onClick={this.getMore}>load more</button>\r\n          <Loading />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Loading.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\SearchPage.js",["117","118","119","120","121","122","123","124","125","126"],"import React from 'react';\r\nimport { Api } from './Api';\r\nimport Image from './Image';\r\nimport {Loading} from './Loading';\r\nimport {SearchBar} from './SearchBar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Database from './Database';\r\nimport {FilterIcon} from './FilterIcon';\r\n\r\nexport class SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: this.props.match.params.searchTerm,\r\n      searchCat: this.props.match.params.searchCat,\r\n      stuff: this.props.stuff,\r\n      data:[],\r\n    };\r\n    // this.getMore = this.getMore.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.state);\r\n    document.getElementsByClassName('pdp')[0].style.display = \"none\";\r\n    let searchCat = this.state.searchCat;\r\n    let searchTerm  = this.state.searchTerm;\r\n    searchTerm = searchTerm.toLowerCase();\r\n    var db = Database;\r\n    var theDb = ``;\r\n    switch(searchCat){\r\n      case `characters`:\r\n        theDb = db.characters;\r\n        break;\r\n      case `comics`:\r\n        theDb = db.comics;\r\n        break;\r\n      case `events`:\r\n        theDb = db.events;\r\n        break;\r\n      case `series`:\r\n        theDb = db.series;\r\n        break;\r\n      case `creators`:\r\n        theDb = db.creators;\r\n        break;\r\n    }\r\n\r\n    theDb.allDocs({include_docs: true}).then((docs) => {\r\n      // console.log(`all docs from search page`);\r\n      // console.log(docs);\r\n      return docs;\r\n    }).then((docs) => {\r\n      var arr = [];\r\n      docs.rows.map((val, i) => {\r\n        var title = ``;\r\n        var s = searchCat;\r\n        if(s ==  `creators`){\r\n          title = val.doc.fullName;\r\n        } else {\r\n          title = val.doc.title;\r\n          if(title == undefined){\r\n            title = val.doc.name;\r\n          }\r\n        }\r\n        title = title.toLowerCase();\r\n        // console.log(title, searchTerm, title.indexOf(searchTerm));\r\n        if(title.indexOf(searchTerm) !== -1){\r\n          arr.push(val.doc);\r\n        }\r\n      });\r\n      // console.log(`array from search page`);\r\n      // console.log(arr);\r\n      this.setState({\r\n        data: arr\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(`search page state`);\r\n    // console.log(this.state);\r\n\r\n    if(this.state.searchTerm !== this.props.match.params.searchTerm){\r\n      // console.log(`search don't match`);\r\n      window.location.reload();\r\n    }\r\n\r\n    var searchTerm = this.state.searchTerm;\r\n    var searchCat = this.state.searchCat;\r\n    var catUrl = `/apps/marvel-comics/#/${searchCat}`\r\n    var li = ``;\r\n    li = this.state.data;\r\n    if(li !== undefined){\r\n      li = li.map(function(val,i){\r\n        // console.log(val);\r\n        let id = val.id;\r\n        let href = `/apps/marvel-comics/#/${searchCat}/${id}`;\r\n        let name = val.name;\r\n        // console.log(name);\r\n        if(name == undefined){\r\n          name = val.title;\r\n          if(name == undefined){\r\n            name = val.fullName;\r\n          }\r\n        }\r\n        var img = val.thumbnail;\r\n        if(img !== null){\r\n          img = <Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension} />\r\n        } else {\r\n          img = ``;\r\n        }\r\n\r\n        return(\r\n          <li key={i}>\r\n            <a href={href}>\r\n              <h2>{name}</h2>\r\n              {img}\r\n            </a>\r\n          </li>\r\n        )\r\n      });\r\n    }\r\n\r\n    var loading2 = document.getElementsByClassName('loading')[1];\r\n    if(loading2 !== undefined){\r\n      loading2.style.display = \"block\";\r\n    }\r\n\r\n    var content = ``;\r\n    var data = this.state.data;\r\n    var dataLength = data.length;\r\n    if(dataLength !== 0 ){\r\n      content = (<ul>{li}</ul>)\r\n    } else {\r\n      content = (\r\n        <div>\r\n          <h3>Sorry we couldn't find what you were looking for.<br className=\"desktop\" /> Please try another search or try loading more <a href={catUrl}>{searchCat}</a>.</h3>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    var landing =  document.getElementsByClassName('search')[0];\r\n    if(landing !== undefined){\r\n      landing.style.display = 'block';\r\n    }\r\n    var loading = document.getElementsByClassName('loading')[0];\r\n    if(loading !== undefined){\r\n      loading.style.display = 'none';\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"search\">\r\n          <h1>Search {searchCat}:<br className=\"mobile\" /> \"{searchTerm}\"</h1>\r\n          <FilterIcon data={this.state.data} cat={this.state.searchCat} $this={this}/>\r\n          {content}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  } //end of render\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\PdpPage.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React from 'react';\r\nimport { Api } from './Api';\r\nimport { List } from './List';\r\nimport Image from './Image';\r\nimport { List2 } from './List2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Database from './Database';\r\nimport EditData from './EditData';\r\nimport PutData from './PutData';\r\n\r\nexport class PdpPage extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: {},\r\n\t\t\tcharacters: [],\r\n\t\t\tcomics: [],\r\n\t\t\tevents:[],\r\n\t\t\tseries:[],\r\n\t\t\tstories:[],\r\n\t\t\tcreators:[],\r\n\t\t\tcategory: this.props.match.params.Category,\r\n\t\t\tid: this.props.match.params.Id,\r\n\t\t};\r\n\t\tthis.changePdp = this.changePdp.bind(this);\r\n\t\tthis.findData = this.findData.bind(this);\r\n\t\tthis.setData = this.setData.bind(this);\r\n\t}\r\n\r\n\tfindData(id, arr){\r\n\t\tvar data = ``;\r\n\t\tarr.map((val,i) => {\r\n\t\t\tif(id == val.id){\r\n\t\t\t\t// console.log(val);\r\n\t\t\t\tdata = val;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn data;\r\n\t}\r\n\r\n\tsetData(theId, theCat, theDb){\r\n\t\tlet id  = theId;\r\n\t\tlet cat  = theCat;\r\n\t\tlet db = theDb;\r\n\r\n\t\tswitch(cat){\r\n\t    case 'comics':\r\n\t      db.comics.allDocs({include_docs: true}).then((docs) => {\r\n\t        // console.log(docs);\r\n\t        return docs;\r\n\t      }).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t        var arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t        this.setState({\r\n\t          data: data\r\n\t        });\r\n\t\t\t\t\treturn data;\r\n\t      }).then((data) => {\r\n\t\t\t\t\t// console.log(`the data`);\r\n\t\t\t\t\t// put databases\r\n\t\t\t\t\tif(data.collectedIssues !== undefined){\r\n\t\t\t\t\t\tvar comics = data.collectedIssues;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.characters !== undefined){\r\n\t\t\t\t\t\tvar characters = data.characters.items;\r\n\t\t\t\t\t\tPutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.characters.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`characters state from this`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.characters);\r\n\t\t\t\t\t\t\tvar list = $this.state.characters;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcharacters: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.creators !== undefined){\r\n\t\t\t\t\t\tvar creators = data.creators.items;\r\n\t\t\t\t\t\tPutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.creators.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`creators state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.creators);\r\n\t\t\t\t\t\t\tvar list = $this.state.creators;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcreators: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.events !== undefined){\r\n\t\t\t\t\t\tvar events = data.events.items;\r\n\t\t\t\t\t\tPutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.events.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`events state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.events);\r\n\t\t\t\t\t\t\tvar list = $this.state.events;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tevents: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//what if not array????\r\n\t\t\t\t\t// var series = data.series.items;\r\n\t\t\t\t\t// PutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.series.push(item);\r\n\t\t\t\t\t// \tconsole.log(`series state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.series);\r\n\t\t\t\t\t// \tvar list = $this.state.series;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tseries: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\tif(data.stories !== undefined){\r\n\t\t\t\t\t\tvar stories = data.stories.items;\r\n\t\t\t\t\t\tPutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.stories.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`stories state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.stories);\r\n\t\t\t\t\t\t\tvar list = $this.state.stories;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tstories: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t    case 'characters':\r\n\t\t\t\tdb.characters.allDocs({include_docs: true}).then((docs) => {\r\n\t\t\t\t\t// console.log(docs);\r\n\t\t\t\t\treturn docs;\r\n\t\t\t\t}).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t\t\t\t\tvar arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}).then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//put databases\r\n\t\t\t\t\tif(data.comics !== undefined){\r\n\t\t\t\t\t\tvar comics = data.comics.items;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// var characters = data.characters.items;\r\n\t\t\t\t\t// PutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.characters.push(item);\r\n\t\t\t\t\t// \tconsole.log(`characters state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.characters);\r\n\t\t\t\t\t// \tvar list = $this.state.characters;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tcharacters: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t// var creators = data.creators.items;\r\n\t\t\t\t\t// PutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.creators.push(item);\r\n\t\t\t\t\t// \tconsole.log(`creators state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.creators);\r\n\t\t\t\t\t// \tvar list = $this.state.creators;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tcreators: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\tif(data.events !== undefined){\r\n\t\t\t\t\t\tvar events = data.events.items;\r\n\t\t\t\t\t\tPutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.events.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`events state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.events);\r\n\t\t\t\t\t\t\tvar list = $this.state.events;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tevents: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.series !== undefined){\r\n\t\t\t\t\t\tvar series = data.series.items;\r\n\t\t\t\t\t\tPutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.series.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`series state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.series);\r\n\t\t\t\t\t\t\tvar list = $this.state.series;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tseries: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.stories !== undefined){\r\n\t\t\t\t\t\tvar stories = data.stories.items;\r\n\t\t\t\t\t\tPutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.stories.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`stories state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.stories);\r\n\t\t\t\t\t\t\tvar list = $this.state.stories;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tstories: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t    case 'events':\r\n\t\t\t\tdb.events.allDocs({include_docs: true}).then((docs) => {\r\n\t\t\t\t\t// console.log(docs);\r\n\t\t\t\t\treturn docs;\r\n\t\t\t\t}).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t\t\t\t\tvar arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}).then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//put databases\r\n\t\t\t\t\tif(data.comics !== undefined){\r\n\t\t\t\t\t\tvar comics = data.comics.items;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.characters !== undefined){\r\n\t\t\t\t\t\tvar characters = data.characters.items;\r\n\t\t\t\t\t\tPutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.characters.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`characters state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.characters);\r\n\t\t\t\t\t\t\tvar list = $this.state.characters;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcharacters: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.creators !== undefined){\r\n\t\t\t\t\t\tvar creators = data.creators.items;\r\n\t\t\t\t\t\tPutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.creators.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`creators state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.creators);\r\n\t\t\t\t\t\t\tvar list = $this.state.creators;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcreators: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// var events = data.events.items;\r\n\t\t\t\t\t// PutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.events.push(item);\r\n\t\t\t\t\t// \tconsole.log(`events state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.events);\r\n\t\t\t\t\t// \tvar list = $this.state.events;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tevents: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\tif(data.series !== undefined){\r\n\t\t\t\t\t\tvar series = data.series.items;\r\n\t\t\t\t\t\tPutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.series.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`series state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.series);\r\n\t\t\t\t\t\t\tvar list = $this.state.series;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tseries: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.stories !== undefined){\r\n\t\t\t\t\t\tvar stories = data.stories.items;\r\n\t\t\t\t\t\tPutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.stories.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`stories state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.stories);\r\n\t\t\t\t\t\t\tvar list = $this.state.stories;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tstories: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t    case 'series':\r\n\t\t\t\tdb.series.allDocs({include_docs: true}).then((docs) => {\r\n\t\t\t\t\t// console.log(docs);\r\n\t\t\t\t\treturn docs;\r\n\t\t\t\t}).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t\t\t\t\tvar arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}).then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//put databases\r\n\t\t\t\t\tif(data.comics !== undefined){\r\n\t\t\t\t\t\tvar comics = data.comics.items;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.characters !== undefined){\r\n\t\t\t\t\t\tvar characters = data.characters.items;\r\n\t\t\t\t\t\tPutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.characters.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`characters state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.characters);\r\n\t\t\t\t\t\t\tvar list = $this.state.characters;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcharacters: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.creators !== undefined){\r\n\t\t\t\t\t\tvar creators = data.creators.items;\r\n\t\t\t\t\t\tPutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.creators.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`creators state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.creators);\r\n\t\t\t\t\t\t\tvar list = $this.state.creators;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcreators: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.events !== undefined){\r\n\t\t\t\t\t\tvar events = data.events.items;\r\n\t\t\t\t\t\tPutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.events.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`events state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.events);\r\n\t\t\t\t\t\t\tvar list = $this.state.events;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tevents: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//what if not array????\r\n\t\t\t\t\t// var series = data.series.items;\r\n\t\t\t\t\t// PutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.series.push(item);\r\n\t\t\t\t\t// \tconsole.log(`series state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.series);\r\n\t\t\t\t\t// \tvar list = $this.state.series;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tseries: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\tif(data.stories !== undefined){\r\n\t\t\t\t\t\tvar stories = data.stories.items;\r\n\t\t\t\t\t\tPutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.stories.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`stories state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.stories);\r\n\t\t\t\t\t\t\tvar list = $this.state.stories;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tstories: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t    case 'stories':\r\n\t\t\t\tdb.stories.allDocs({include_docs: true}).then((docs) => {\r\n\t\t\t\t\t// console.log(docs);\r\n\t\t\t\t\treturn docs;\r\n\t\t\t\t}).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t\t\t\t\tvar arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}).then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//put databases\r\n\t\t\t\t\tif(data.comics !== undefined){\r\n\t\t\t\t\t\tvar comics = data.comics.items;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.characters !== undefined){\r\n\t\t\t\t\t\tvar characters = data.characters.items;\r\n\t\t\t\t\t\tPutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.characters.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`characters state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.characters);\r\n\t\t\t\t\t\t\tvar list = $this.state.characters;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcharacters: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.creators !== undefined){\r\n\t\t\t\t\t\tvar creators = data.creators.items;\r\n\t\t\t\t\t\tPutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.creators.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`creators state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.creators);\r\n\t\t\t\t\t\t\tvar list = $this.state.creators;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcreators: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.events !== undefined){\r\n\t\t\t\t\t\tvar events = data.events.items;\r\n\t\t\t\t\t\tPutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.events.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`events state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.events);\r\n\t\t\t\t\t\t\tvar list = $this.state.events;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tevents: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.series !== undefined){\r\n\t\t\t\t\t\tvar series = data.series.items;\r\n\t\t\t\t\t\tPutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.series.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`series state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.series);\r\n\t\t\t\t\t\t\tvar list = $this.state.series;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tseries: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// var stories = data.stories.items;\r\n\t\t\t\t\t// PutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.stories.push(item);\r\n\t\t\t\t\t// \tconsole.log(`stories state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.stories);\r\n\t\t\t\t\t// \tvar list = $this.state.stories;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tstories: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// })\r\n\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t    case 'creators':\r\n\t\t\t\tdb.creators.allDocs({include_docs: true}).then((docs) => {\r\n\t\t\t\t\t// console.log(docs);\r\n\t\t\t\t\treturn docs;\r\n\t\t\t\t}).then((docs) => {\r\n\t\t\t\t\t//set data state\r\n\t\t\t\t\tvar arr = EditData(docs.rows);\r\n\t\t\t\t\tvar data = this.findData(id, arr);\r\n\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}).then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//put databases\r\n\t\t\t\t\tif(data.comics !== undefined){\r\n\t\t\t\t\t\tvar comics = data.comics.items;\r\n\t\t\t\t\t\tPutData(this, comics, 'comics', db.comics, true, function($this, item) {\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t$this.state.comics.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`comics state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.comics);\r\n\t\t\t\t\t\t\tvar list = $this.state.comics;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tcomics: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// var characters = data.characters.items;\r\n\t\t\t\t\t// PutData(this, characters, 'characters', db.characters, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.characters.push(item);\r\n\t\t\t\t\t// \tconsole.log(`characters state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.characters);\r\n\t\t\t\t\t// \tvar list = $this.state.characters;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tcharacters: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t// var creators = data.creators.items;\r\n\t\t\t\t\t// PutData(this, creators, 'creators', db.creators, true, function($this, item) {\r\n\t\t\t\t\t// \t// console.log(item);\r\n\t\t\t\t\t// \t$this.state.creators.push(item);\r\n\t\t\t\t\t// \tconsole.log(`creators state`);\r\n\t\t\t\t\t// \tconsole.log($this.state.creators);\r\n\t\t\t\t\t// \tvar list = $this.state.creators;\r\n\t\t\t\t\t// \t$this.setState({\r\n\t\t\t\t\t// \t\tcreators: list\r\n\t\t\t\t\t// \t});\r\n\t\t\t\t\t// });\r\n\r\n\t\t\t\t\tif(data.events !== undefined){\r\n\t\t\t\t\t\tvar events = data.events.items;\r\n\t\t\t\t\t\tPutData(this, events, 'events', db.events, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.events.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`events state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.events);\r\n\t\t\t\t\t\t\tvar list = $this.state.events;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tevents: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.series !== undefined){\r\n\t\t\t\t\t\tvar series = data.series.items;\r\n\t\t\t\t\t\tPutData(this, series, 'series', db.series, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.series.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`series state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.series);\r\n\t\t\t\t\t\t\tvar list = $this.state.series;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tseries: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.stories !== undefined){\r\n\t\t\t\t\t\tvar stories = data.stories.items;\r\n\t\t\t\t\t\tPutData(this, stories, 'stories', db.stories, true, function($this, item) {\r\n\t\t\t\t\t\t\t// console.log(item);\r\n\t\t\t\t\t\t\t$this.state.stories.push(item);\r\n\t\t\t\t\t\t\tconsole.log(`stories state`);\r\n\t\t\t\t\t\t\tconsole.log($this.state.stories);\r\n\t\t\t\t\t\t\tvar list = $this.state.stories;\r\n\t\t\t\t\t\t\t$this.setState({\r\n\t\t\t\t\t\t\t\tstories: list\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t      break;\r\n\r\n\t  }\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tvar db = Database;\r\n    // console.log(db);\r\n\r\n    // db.comics.info().then(function (info) {\r\n    //   console.log(info);\r\n    // })\r\n\r\n\t\tlet id  = this.props.match.params.Id;\r\n\t\tlet cat  = this.props.match.params.Category;\r\n\t\tthis.setData(id, cat, db);\r\n\t}\r\n\r\n\tchangePdp(e){\r\n\t\t// console.log(`pdp changePdp`);\r\n\r\n\t\t//hide the characters, comics, creators, events, series\r\n\t\tdocument.getElementsByClassName('characters')[0].style.display = \"none\";\r\n\t\tdocument.getElementsByClassName('comics')[0].style.display = \"none\";\r\n\t\tdocument.getElementsByClassName('events')[0].style.display = \"none\";\r\n\t\tdocument.getElementsByClassName('series')[0].style.display = \"none\";\r\n\t\tdocument.getElementsByClassName('creators')[0].style.display = \"none\";\r\n\r\n\t\t//console.log(e);\r\n\t\t// console.log(e.target);\r\n\t\tlet url = ``;\r\n\t\tif(e.target.tagName == \"IMG\"){\r\n\t\t\turl = e.target.parentNode.href;\r\n\t\t} else {\r\n\t\t\turl = e.target.href;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: {},\r\n\t\t\tcharacters: [],\r\n\t\t\tcomics: [],\r\n\t\t\tevents:[],\r\n\t\t\tseries:[],\r\n\t\t\tstories:[],\r\n\t\t\tcreators:[]\r\n\t\t});\r\n\r\n\t\t// let url = e.target.href;\r\n\t\tvar db = Database;\r\n\t\tlet urlArr = url.split('/');\r\n\t\tlet cat = urlArr[urlArr.length - 2];\r\n\t\tlet id = urlArr[urlArr.length -1];\r\n\t\t// console.log(url, urlArr, cat, id);\r\n\t\tthis.setData(id, cat, db);\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(`pdp state`);\r\n\t\t// console.log(this.state);\r\n\t\tlet img =``;\r\n\t\tlet data = ``;\r\n\t\tlet title = ``;\r\n\t\tlet desc = ``;\r\n\t\tlet pageCount = ``;\r\n\t\tlet issue =``;\r\n\t\tlet urls =``;\r\n\t\tlet dates = ``;\r\n\t\tlet images = ``;\r\n\t\tlet characters = ``;\r\n\t\tlet comics = ``;\r\n\t\tlet events = ``;\r\n\t\tlet stories = ``;\r\n\t\tlet series = ``;\r\n\t\tlet creators = ``;\r\n\t\tlet li = ``;\r\n\r\n\t\tif(this.state.category !== this.props.match.params.Category){\r\n      // console.log(`category don't match`);\r\n      window.location.reload();\r\n    } else if(this.state.id !== this.props.match.params.Id){\r\n      // console.log(`id don't match`);\r\n      window.location.reload();\r\n    }\r\n\r\n\t\t// console.log('characters length');\r\n\t\t// console.log(this.state.characters);\r\n\t\t// console.log(this.state.characters.length);\r\n\t\tif(this.state.characters.length !== 0 && this.state.characters.length > 5){\r\n\t\t\t// console.log(`characters is a go`);\r\n\t\t\tcharacters = <List url=\"characters\" list={this.state.characters} slider=\"true\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('characters')[0].style.display = \"block\";\r\n\t\t} else if(this.state.characters.length !== 0 && this.state.characters.length <= 5) {\r\n\t\t\t// console.log(`characters is a go`);\r\n\t\t\tcharacters = <List url=\"characters\" list={this.state.characters} slider=\"false\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('characters')[0].style.display = \"block\";\r\n\t\t}\r\n\r\n\t\t// console.log('comics length');\r\n\t\t// console.log(this.state.comics.length);\r\n\t\tif(this.state.comics.length !== 0 && this.state.comics.length > 5){\r\n\t\t\t// console.log(`comics is a go`);\r\n\t\t\tcomics = <List url=\"comics\" list={this.state.comics} slider=\"true\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('comics')[0].style.display = \"block\";\r\n\t\t} else if(this.state.comics.length !== 0 && this.state.comics.length <= 5){\r\n\t\t\t// console.log(`comics is a go`);\r\n\t\t\tcomics = <List url=\"comics\" list={this.state.comics} slider=\"false\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('comics')[0].style.display = \"block\";\r\n\t\t}\r\n\r\n\t\t// console.log('events length');\r\n\t\t// console.log(this.state.events.length);\r\n\t\tif(this.state.events.length !== 0 && this.state.events.length > 5){\r\n\t\t\t// console.log(`events is a go`);\r\n\t\t\tevents = <List url=\"events\" list={this.state.events} slider=\"true\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('events')[0].style.display = \"block\";\r\n\t\t} else if(this.state.events.length !== 0 && this.state.events.length <= 5){\r\n\t\t\t// console.log(`events is a go`);\r\n\t\t\tevents = <List url=\"events\" list={this.state.events} slider=\"false\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('events')[0].style.display = \"block\";\r\n\t\t}\r\n\r\n\t\t// console.log('series length');\r\n\t\t// console.log(this.state.series.length);\r\n\t\tif(this.state.series.length !== 0 && this.state.series.length > 5){\r\n\t\t\t// console.log(`series is a go`);\r\n\t\t\tseries = <List url=\"series\" list={this.state.series} slider=\"true\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('series')[0].style.display = \"block\";\r\n\t\t} else if(this.state.series.length !== 0 && this.state.series.length <= 5){\r\n\t\t\t// console.log(`series is a go`);\r\n\t\t\tseries = <List url=\"series\" list={this.state.series} slider=\"false\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('series')[0].style.display = \"block\";\r\n\t\t}\r\n\r\n\t\t// console.log('creators length');\r\n\t\t// console.log(this.state.creators.length);\r\n\t\tif(this.state.creators.length !== 0){\r\n\t\t\t// console.log(`creators is a go`);\r\n\t\t\tcreators = <List url=\"creators\" list={this.state.creators} slider=\"false\" changePdp={this.changePdp} />\r\n\t\t\tdocument.getElementsByClassName('creators')[0].style.display = \"block\";\r\n\t\t}\r\n\r\n\t\tif(this.state.data.id !== undefined) {\r\n\t\t\t//console.log('empty data');\r\n\t\t\tlet cat  = this.props.match.params.Category;\r\n\t\t\t// console.log(cat);\r\n\t\t\tdata = this.state.data;\r\n\r\n\t\t\ttitle =  data.title;\r\n\t\t\tif(cat == `creators`){\r\n\t\t\t\ttitle = data.fullName;\r\n\t\t\t} else if(title == undefined) {\r\n\t\t\t\ttitle = data.name;\r\n\t\t\t}\r\n\r\n\t\t\tdesc =  data.description;\r\n\t\t\tif (desc !== null) {\r\n\t\t\t\tdesc = <p dangerouslySetInnerHTML={{ __html: desc }} />\r\n\t\t\t}\r\n\r\n\t\t\tif(data.pageCount !== undefined){\r\n\t\t\t\tpageCount = <p>Pages: {data.pageCount}</p>;\r\n\t\t\t}\r\n\r\n\t\t\tif(data.issueNumber !== undefined){\r\n\t\t\t\tissue = <p>Issue # {data.issueNumber}</p>;\r\n\t\t\t}\r\n\r\n\t\t\tif(data.dates !== undefined && data.dates.length !== 0 ){\r\n\t\t\t\tdates = data.dates.map((val, i)=>{\r\n\t\t\t\t\tvar theDate = new Date(val.date).toDateString();\r\n\r\n\t\t\t\t\tif(theDate !== `Invalid Date`){\r\n\t\t\t\t\t\ttheDate = theDate.split(' ');\r\n\t\t\t\t\t\ttheDate = `${theDate[1]} ${theDate[2]}, ${theDate[3]}`;\r\n\r\n\t\t\t\t\t\tvar str = ``;\r\n\t\t\t\t\t\tif(val.type == `onsaleDate`){\r\n\t\t\t\t\t\t\tstr = `On Sale Date`;\r\n\t\t\t\t\t\t} else if(val.type == `focDate`){\r\n\t\t\t\t\t\t\tstr = `Final Order Cutoff Date`;\r\n\t\t\t\t\t\t} else if(val.type == `unlimitedDate`){\r\n\t\t\t\t\t\t\tstr = `Unlimited Date`;\r\n\t\t\t\t\t\t} else if(val.type == `digitalPurchaseDate`){\r\n\t\t\t\t\t\t\tstr = `Digital Purchase Date`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn(<p key={i}>{str}: {theDate}</p>)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(data.images !== undefined){\r\n\t\t\t\tif(data.images.length > 1){\r\n\t\t\t\t\timages = data.images.map((val, i)=>{\r\n\t\t\t\t\t\treturn(<Image key={i} name={data.title} href={val.path} ext={val.extension} size='portrait'  />)\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\timages = <Image name={data.title} href={data.images[0].path} ext={data.images[0].extension} size='portrait'  />\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(cat!== `comics`){\r\n\t\t\t\timg = <Image name={data.title} className=\"padding\" href={data.thumbnail.path} ext={data.thumbnail.extension} size='portrait'  />\r\n\t\t\t}\r\n\r\n\t\t\tif(data.urls.length == 1){\r\n\t\t\t\turls = <a href={data.urls[0].url} className=\"cta single\" target=\"_blank\">learn more</a>\r\n\t\t\t} else {\r\n\t\t\t\tli = data.urls.map(function(val, i){\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<li key={i}><a href={val.url} className=\"cta\" target=\"_blank\">{val.type}</a></li>\r\n\t\t\t\t\t)\r\n\t\t\t\t});\r\n\t\t\t\turls = <ul>{li}</ul>\r\n\t\t\t}\r\n\r\n\t\t\tdocument.getElementsByClassName('loading')[0].style.display = 'none';\r\n\t\t\tvar pdpPage = document.getElementsByClassName('pdp');\r\n\t\t\tpdpPage[0].style.display = 'block';\r\n\t\t} // end of if\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"pdp\">\r\n\t\t\t\t\t<div className=\"first\">\r\n\t\t\t\t\t\t<h1 className=\"mobile\">{title}</h1>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"the-title\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"desktop\">{title}</h1>\r\n\t\t\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"the-images\">\r\n\t\t\t\t\t\t\t\t{img}\r\n\t\t\t\t\t\t\t\t{images}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"the-details\">\r\n\t\t\t\t\t\t\t\t{issue}\r\n\t\t\t\t\t\t\t\t{pageCount}\r\n\t\t\t\t\t\t\t\t{dates}\r\n\t\t\t\t\t\t\t\t{urls}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"creators\">\r\n\t\t\t\t\t\t\t<h2>Creators</h2>\r\n\t\t\t\t\t\t\t{creators}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"second\">\r\n\t\t\t\t\t\t<div className =\"characters\">\r\n\t\t\t\t\t\t\t<h2>characters</h2>\r\n\t\t\t\t\t\t\t{characters}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"comics\">\r\n\t\t\t\t\t\t\t<h2>comics</h2>\r\n\t\t\t\t\t\t\t{comics}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className =\"events\">\r\n\t\t\t\t\t\t\t<h2>events</h2>\r\n\t\t\t\t\t\t\t{events}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"series\">\r\n\t\t\t\t\t\t\t<h2>series</h2>\r\n\t\t\t\t\t\t\t{series}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n  } //end of render\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Api.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\MakeFeatured.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\List.js",["145"],"import React from 'react';\r\nimport Image from './Image';\r\nimport Slider from \"react-slick\";\r\n\r\nexport class List extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let baseURL = this.props.url;\r\n    let listItems = this.props.list;\r\n    let slider = this.props.slider;\r\n    let changePdp = this.props.changePdp;\r\n    //console.log('List.js changePdp');\r\n    //console.log(changePdp);\r\n    let elem = ``;\r\n    let href = ``;\r\n    let name = ``;\r\n    let li = listItems.map(function(val, i){\r\n      if(baseURL === 'creators' || baseURL === 'stories'){\r\n\t\t    //console.log(\"pdp page creators\");\r\n        name = val.name;\r\n        // console.log(name);\r\n        if(name === undefined){\r\n          name = val.fullName;\r\n        }\r\n\t      //console.log(name);\r\n\t      href = val.resourceURI;\r\n\t      href = href.split('/');\r\n\t      let hrefLength = href.length;\r\n\t      let id = href[hrefLength -1];\r\n\t      href = `/apps/marvel-comics/#/${baseURL}/${id}`;\r\n\t      let role = val.role;\r\n        // console.log(role);\r\n\r\n\t      if(role !== undefined){\r\n\t\t      role = `- ` + role;\r\n\t      } else {\r\n\t\t      role = ``;\r\n\t      }\r\n\t\t    //console.log(href);\r\n\t\t    return (<li key={i}><a href={href} className=\"cta\" onClick={changePdp}>{name} {role}</a></li>);\r\n\r\n      } else if(baseURL === 'comics' || baseURL === 'characters' || baseURL === 'series' || baseURL === 'events'){\r\n\t\t    //console.log('pdp page comics');\r\n\t      href = `/apps/marvel-comics/#/${baseURL}/${val.id}`;\r\n\t      name = val.name;\r\n\t      if(name === undefined){\r\n\t\t      name = val.title;\r\n\t      }\r\n\r\n\t\t    if(val.thumbnail !== undefined){\r\n\t\t      if(val.thumbnail.path !== \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\"){\r\n\t\t\t      if(val.id !== undefined){\r\n\t\t\t\t      return(<li key={i}><a href={href} onClick={changePdp}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension} /></a></li>);\r\n\t\t\t      } else {\r\n\t\t\t\t\t    return(<li><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}  /></li>);\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t      } else {\r\n\t\t\t    href = val.resourceURI;\r\n\t\t\t    href = href.split('/');\r\n\t\t\t    let hrefLength = href.length;\r\n\t\t\t    let id = href[hrefLength -1];\r\n\t\t      href = `/apps/marvel-comics/#/${baseURL}/${id}`;\r\n\r\n\t\t\t    return (<li key={i}><a href={href} onClick={changePdp}>{name}</a></li>);\r\n\t\t    }\r\n\t    }\r\n    });\r\n\r\n\t  var settings = {\r\n      infinite: true,\r\n      autoplaySpeed: 4000,\r\n      speed: 1000,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      arrows: false,\r\n      autoplay:true,\r\n      dots: false,\r\n      centerMode:true,\r\n      responsive: [\r\n\t      {\r\n          breakpoint: 1025,\r\n          settings: {\r\n            slidesToShow: 3,\r\n\t\t        //centerMode: true\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 810,\r\n          settings: {\r\n            slidesToShow: 2,\r\n\t\t        //centerMode: true\r\n          }\r\n        },\r\n\t      {\r\n          breakpoint: 428,\r\n          settings: {\r\n            slidesToShow: 1,\r\n\t\t        //centerMode: true\r\n          }\r\n        },\r\n\t    ]\r\n    };\r\n\r\n    if(slider === 'true'){\r\n\t    elem = <ul><Slider {...settings}>{li}</Slider></ul>\r\n    } else {\r\n\t    elem = <ul className=\"no-slider\">{li}</ul>\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {elem}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Image.js",["146","147"],"import React from 'react';\r\n\r\nexport default class Image extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sizes: [\r\n        {name: `portrait`, value: `portrait_uncanny`}, \t//300x450px\r\n        {name: `standard`, value: `standard_fantastic`}, \t//250x250px\r\n        {name: `landscape`, value : `landscape_incredible`}, //464x261px\r\n      ]\r\n    };\r\n    this.hover = this.hover.bind(this);\r\n  }\r\n\r\n  hover(e){\r\n\r\n  }\r\n\r\n  render() {\r\n    var alt = this.props.name;\r\n    var src = this.props.href;\r\n    var clss = this.props.className;\r\n    var size = this.props.size;\r\n    var sizesArr = this.state.sizes;\r\n    sizesArr.map(function(val, i){\r\n      // console.log(i,val);\r\n      if(val.name == size){\r\n        size = val.value;\r\n      }\r\n    })\r\n\r\n    var ext =  this.props.ext;\r\n    var href = `${src}/${size}.${ext}`;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <img src={href} className={clss} alt={alt} title={alt}/>\r\n      </React.Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\List2.js",["148"],"import React from 'react';\r\nimport Image from './Image';\r\n\r\nexport class List2 extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let header = this.props.header;\r\n    let baseURL = this.props.url;\r\n    let listItems = this.props.list;\r\n    let li = listItems.map(function(val, i){\r\n      // stories\r\n      if(header === 'stories'){\r\n        let href = `/apps/marvel-comics#/${baseURL}/${val.id}`;\r\n        let name = val.title;\r\n\r\n        return(<li key={i}><a href={href}><h2>{name}</h2></a></li>)\r\n\r\n      } else if(val.thumbnail !== undefined && val.thumbnail !== null ){\r\n        // let path = val.thumbnail.path;\r\n        // if(path.indexOf(`image_not_available`) == -1){\r\n        let name = ``;\r\n        if(val.id !== undefined){\r\n          let href = `/apps/marvel-comics#/${baseURL}/${val.id}`;\r\n          //creators\r\n          if(header === 'creators'){\r\n            name = val.fullName;\r\n\r\n            return(<li key={i}><a href={href}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}  /><h2>{name}</h2></a></li>)\r\n\r\n          } else if(header === 'comics'){\r\n            //comics\r\n            name = val.title;\r\n\r\n            return(<li key={i}><a href={href}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}  /><h2>{name}</h2><span>Pages: {val.pageCount}</span></a></li>)\r\n\r\n          } else if(header === 'series' || header === 'events'){\r\n            //series\r\n            name = val.title;\r\n            let description = ``;\r\n            if(val.description !== \"\" && val.description !== null){\r\n              description = <p>{val.description}</p>\r\n            }\r\n\r\n            return(<li key={i}><a href={href}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}  /><h2>{name}</h2>{description}</a></li>)\r\n\r\n          } else {\r\n            if(val.name !== undefined){\r\n              name = val.name;\r\n            } else if(val.title !== undefined){\r\n              name = val.title;\r\n            }\r\n\r\n            return(<li key={i}><a href={href}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}  /><h2>{name}</h2></a></li>)\r\n\r\n          }\r\n        } else {\r\n          let name = ``;\r\n          if(val.name !== undefined){\r\n            name = val.name;\r\n          } else if(val.title !== undefined){\r\n            name = val.title;\r\n          }\r\n\r\n          return(<li key={i}><Image name={name} href={val.thumbnail.path} size=\"portrait\" ext={val.thumbnail.extension}/><h2>{name}</h2></li>)\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>{header}</h2>\r\n        <ul>{li}</ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\UpArrow.js",[],"C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\SearchBar.js",["149","150","151","152","153","154","155"],"import React from 'react';\r\nimport { Api } from './Api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Database from './Database';\r\n\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comics: [],\r\n      characters:[],\r\n      events:[],\r\n      series:[],\r\n      creators:[],\r\n      selected: `characters`,\r\n    };\r\n    this.close = this.close.bind(this);\r\n    this.filter = this.filter.bind(this);\r\n    this.setDatabase = this.setDatabase.bind(this);\r\n    this.selectChange = this.selectChange.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  selectChange(e){\r\n    // console.log(`select change from search bar`);\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      selected: e.target.value\r\n    });\r\n  }\r\n\r\n  setDatabase($this, theDb, baseURL, str, func){\r\n    theDb.allDocs({include_docs: true}).then((docs) => {\r\n      // console.log(`${str} all docs from search bar`);\r\n      // console.log(docs);\r\n      return docs;\r\n    }).then((docs) => {\r\n      var arr = [];\r\n      docs.rows.map((val, i) => {\r\n        var title = ``;\r\n        var s = str;\r\n        if(s ==  `creators`){\r\n          title = val.doc.fullName;\r\n        } else {\r\n          title = val.doc.title;\r\n          if(title == undefined){\r\n            title = val.doc.name;\r\n          }\r\n        }\r\n\r\n        var id = val.doc.id;\r\n        var url = `${baseURL}/${str}/${id}`;\r\n        var obj = {\r\n          title: title,\r\n          url: url\r\n        };\r\n        arr.push(obj);\r\n      });\r\n      // console.log(`${str} array from search bar`);\r\n      // console.log(arr);\r\n      func($this, arr)\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var db = Database;\r\n    // console.log(`search bar database`);\r\n    // console.log(db);\r\n    var baseURL = `/apps/marvel-comics/#`;\r\n\r\n    this.setDatabase(this, db.comics, baseURL, 'comics', function($this, list){\r\n      $this.setState({\r\n        comics: list\r\n      });\r\n    });\r\n\r\n    this.setDatabase(this, db.characters, baseURL, 'characters', function($this, list){\r\n      $this.setState({\r\n        characters: list\r\n      });\r\n    });\r\n\r\n    this.setDatabase(this, db.events, baseURL, 'events', function($this, list){\r\n      $this.setState({\r\n        events: list\r\n      });\r\n    });\r\n\r\n    this.setDatabase(this, db.series, baseURL, 'series', function($this, list){\r\n      $this.setState({\r\n        series: list\r\n      });\r\n    });\r\n\r\n    this.setDatabase(this, db.creators, baseURL, 'creators', function($this, list){\r\n      $this.setState({\r\n        creators: list\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  search(e){\r\n    // console.log(`search from search bar`);\r\n    var str = e.target.previousSibling.value;\r\n    str = str.toLowerCase();\r\n    // console.log(str)\r\n    var cat = e.target.parentNode.previousSibling.value;\r\n    // console.log(cat);\r\n    var url = `/apps/marvel-comics/#/search/${cat}/${str}`;\r\n    // console.log(url);\r\n\r\n    window.location.href = url;\r\n\r\n    // if(e.keyCode ===  13){\r\n    //   console.log('enter pressed');\r\n    //   console.log(e.target.value);\r\n    //   var searchTerm = e.target.value;\r\n    //   window.location.hash = `#/search/${searchTerm}`;\r\n    //   window.location.reload();\r\n    //   window.location.href = url;\r\n    // }\r\n\r\n\r\n    this.close();\r\n  }\r\n\r\n  filter(e){\r\n    var str = e.target.value;\r\n    str = str.toLowerCase();\r\n    // console.log(str)\r\n    var ul = document.getElementById('autocomplete');\r\n    ul.style.display = 'block';\r\n    var li = ul.childNodes;\r\n    // console.log(li);\r\n    li.forEach((val, i) => {\r\n      var liStr = val.innerText;\r\n      liStr = liStr.toLowerCase();\r\n      if(liStr.indexOf(str) !== -1){\r\n        val.style.display = 'block';\r\n      } else {\r\n        // console.log('no match');\r\n        // console.log(liStr, str);\r\n        val.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  close(e){\r\n    // console.log(e.target);\r\n    var searchInput = document.getElementById('search-bar');\r\n    searchInput.classList.remove(\"show\");\r\n    searchInput.children[2].children[0].value = ``;\r\n    var ul = document.getElementById('autocomplete');\r\n    ul.style.display = 'none';\r\n    var li = ul.childNodes;\r\n    li.forEach((val, i) => {\r\n      val.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(`from SearchBar state`);\r\n    // console.log(this.props.results);\r\n    // console.log(this.state);\r\n\r\n    var li = ``;\r\n    var arr = [];\r\n    switch(this.state.selected){\r\n      case `characters`:\r\n        arr = this.state.characters;\r\n        break;\r\n      case `comics`:\r\n        arr = this.state.comics;\r\n        break;\r\n      case `events`:\r\n        arr = this.state.events;\r\n        break;\r\n      case `series`:\r\n        arr = this.state.series;\r\n        break;\r\n      case `creators`:\r\n        arr = this.state.creators;\r\n        break;\r\n    }\r\n\r\n    li = arr.map((val,i) => {\r\n      return(<li key={i}><a href={val.url} onClick={this.close}>{val.title}</a></li>);\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"search-bar\">\r\n          <FontAwesomeIcon icon={faTimesCircle} size=\"3x\" onClick={this.close} />\r\n          <select onChange={this.selectChange}>\r\n            <option value=\"characters\">characters</option>\r\n            <option value=\"comics\">comics</option>\r\n            <option value=\"events\">events</option>\r\n            <option value=\"series\">series</option>\r\n            <option value=\"creators\">creators</option>\r\n          </select>\r\n          <div>\r\n            <input type=\"text\" onKeyUp = {this.filter} placeholder=\"Search\" />\r\n            <input type=\"button\" value=\"Search\" onClick={this.search} />\r\n            <ul id=\"autocomplete\">\r\n              {li}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\Database.js",["156"],"import PouchDB from 'pouchdb';\nvar dbComics = new PouchDB('marvel-comics');\nvar dbCharacters = new PouchDB('marvel-characters');\nvar dbEvents = new PouchDB('marvel-events');\nvar dbSeries = new PouchDB('marvel-series');\nvar dbCreators = new PouchDB('marvel-creators');\nvar dbStories = new PouchDB('marvel-stories');\nexport default {comics: dbComics, characters: dbCharacters, events: dbEvents, series: dbSeries, creators: dbCreators, stories: dbStories};\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\EditData.js",["157"],"var EditData = (arr) => {\n  // console.log(`EditData.js`);\n  // console.log(arr);\n  var updatedArray = [];\n  var array = arr;\n  array.map((obj, i) => {\n    updatedArray.push(obj.doc);\n  });\n  return updatedArray;\n};\n\nexport default EditData;\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\PutData.js",["158","159","160","161","162"],"import { Api } from './Api';\n\nvar PutData = ($this, arr, str, database, isArr, func) => {\n  console.log(`PutData.js`);\n  var goFetch = false;\n  // console.log(arr, str, database, isArr);\n  // return new Promise((resolve, reject) => {\n  database.allDocs({include_docs: true}).then((docs) => {\n    // console.log(docs);\n    return docs.rows;\n  }).then((docs) => {\n    var returnedArr = [];\n    if(isArr == false) {\n      console.log(`it is not an array`);\n      var id = arr.resourceURI;\n      id = id.split('/');\n      id = id[id.length -1];\n      let theUrl = `http://gateway.marvel.com/v1/public/${str}/${id}?apikey=${Api}`;\n      fetch(theUrl).then(res => res.json()).then((results) => {\n        // console.log(results);\n        var data = results.data.results[0];\n        var doc = {};\n        doc[\"_id\"] = `${str}-${data.id}`;\n        var returnedTarget = Object.assign(data, doc)\n        // console.log(returnedTarget);\n        returnedArr.push(returnedTarget);\n        return returnedTarget;\n      }).then((returnedTarget) => {\n        // put the array to the database\n        database.put(returnedTarget).then((item) => {\n          console.log(`${str} db put`);\n          console.log(item);\n        });\n      });\n    } else {\n      arr.map((val,i) => {\n        var id = val.resourceURI;\n        id = id.split('/');\n        id = id[id.length -1];\n        id = Number(id);\n        // console.log(id);\n\n        var data = ``;\n    \t\tfor(var j =0; j < docs.length; j++){\n          // console.log(id, docs[j].doc.id);\n          if(id == docs[j].doc.id){\n    \t\t\t\t// console.log(`match don't fetch`);\n            // console.log(id, docs[j].doc.id);\n            goFetch = false;\n    \t\t\t\tfunc($this, docs[j].doc);\n            break;\n    \t\t\t} else {\n            // console.log(`no match yet`);\n            goFetch = true;\n            // console.log(id, docs[j].doc.id);\n          }\n        }\n\n        // console.log(goFetch);\n        if(goFetch == true){\n          let theUrl = `http://gateway.marvel.com/v1/public/${str}/${id}?apikey=${Api}`;\n          // console.log(theUrl);\n          fetch(theUrl).then(res => res.json()).then((results) => {\n            if(results.data !== undefined){\n              // console.log(results);\n              var data = results.data.results[0];\n              var doc = {};\n              doc[\"_id\"] = `${str}-${data.id}`;\n              var returnedTarget = Object.assign(data, doc)\n              // console.log(`returnedTarget`);\n              // console.log(returnedTarget);\n              returnedArr.push(returnedTarget);\n              return returnedTarget;\n            }\n          }).then((returnedTarget) => {\n            // put the array to the database\n            database.put(returnedTarget).then((item) => {\n              // console.log(`${str} db put`);\n              // console.log(item);\n              return item;\n            }).then((item) => {\n              database.get(item.id).then((item) => {\n                // console.log(`${str} db get`);\n                // console.log(item);\n                func($this, item)\n              });\n            }).catch((err) =>{\n              console.log(`error`);\n              console.log(err);\n              database.get(err.id).then((item) => {\n                console.log(`${str} error db get`);\n                console.log(item);\n                func($this, item)\n              });\n            });\n          });\n        }\n      });\n    \n    }\n    // console.log(`returnedArr`);\n    // console.log(returnedArr);\n    // resolve(returnedArr);\n  });\n};\n\nexport default PutData;\n","C:\\Users\\david.thanphilom\\desktop\\projects\\marvel-comics-app\\my-app\\src\\FilterIcon.js",["163","164","165","166","167","168","169","170","171"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport { faSortAlphaDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSortAlphaDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport class FilterIcon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.close = this.close.bind(this);\r\n    this.open = this.open.bind(this);\r\n    this.changeIcon = this.changeIcon.bind(this);\r\n  }\r\n\r\n  open(e) {\r\n    // console.log(`open`);\r\n    document.getElementsByClassName('filter-container')[0].style.display = \"flex\";\r\n  }\r\n\r\n  close(e) {\r\n    // console.log(`close`);\r\n    document.getElementsByClassName('filter-container')[0].style.display = \"none\";\r\n  }\r\n\r\n  changeIcon(e, $this, str, func){\r\n    // console.log(`changeIcon`);\r\n    // console.log(this.props.data);\r\n    // console.log(this.props.cat);\r\n    // console.log(this.props.$this);\r\n    // console.log(str);\r\n    // console.log(e.target);\r\n\r\n    //hide the checked boxes\r\n    document.getElementsByClassName('fa-check-square')[0].style.display = \"none\";\r\n    document.getElementsByClassName('fa-check-square')[1].style.display = \"none\";\r\n\r\n    //show the unchecked boxes\r\n    document.getElementsByClassName('fa-square')[0].style.display = \"block\";\r\n    document.getElementsByClassName('fa-square')[1].style.display = \"block\";\r\n\r\n    //if clicked path instead of svg & hide unchecked box then show checked box\r\n    if(e.target.tagName == 'path'){\r\n      e.target.parentNode.style.display = \"none\";\r\n    } else {\r\n      e.target.style.display = \"none\";\r\n    }\r\n    e.target.previousSibling.style.display = \"block\";\r\n\r\n    var arr = this.props.data;\r\n    //sort the data state\r\n    switch(this.props.cat){\r\n      case `characters`:\r\n        if(str == 'a-z'){\r\n          // console.log(`sort a-z`);\r\n          arr.sort(function(a,b){\r\n            if(a.name < b.name) { return -1; }\r\n            if(a.name > b.name) { return 1; }\r\n            return 0;\r\n          });\r\n        } else if(str == 'z-a'){\r\n          // console.log(`sort z-a`);\r\n          arr.sort(function(a,b){\r\n            if(a.name > b.name) { return -1; }\r\n            if(a.name < b.name) { return 1; }\r\n            return 0;\r\n          });\r\n        }\r\n        break;\r\n      case `comics`:\r\n      case `events`:\r\n      case `series`:\r\n        if(str == 'a-z'){\r\n          // console.log(`sort a-z`);\r\n          arr.sort(function(a,b){\r\n            if(a.title < b.title) { return -1; }\r\n            if(a.title > b.title) { return 1; }\r\n            return 0;\r\n          });\r\n        } else if(str == 'z-a'){\r\n          // console.log(`sort z-a`);\r\n          arr.sort(function(a,b){\r\n            if(a.title > b.title) { return -1; }\r\n            if(a.title < b.title) { return 1; }\r\n            return 0;\r\n          });\r\n        }\r\n        break;\r\n      case `creators`:\r\n        if(str == 'a-z'){\r\n          // console.log(`sort a-z`);\r\n          arr.sort(function(a,b){\r\n            if(a.fullName < b.fullName) { return -1; }\r\n            if(a.fullName > b.fullName) { return 1; }\r\n            return 0;\r\n          });\r\n        } else if(str == 'z-a'){\r\n          // console.log(`sort z-a`);\r\n          arr.sort(function(a,b){\r\n            if(a.fullName > b.fullName) { return -1; }\r\n            if(a.fullName < b.fullName) { return 1; }\r\n            return 0;\r\n          });\r\n        }\r\n        break;\r\n    }\r\n    // console.log(arr);\r\n    func($this, arr);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment >\r\n        <FontAwesomeIcon icon={faFilter} size=\"2x\" className=\"filter-icon\" onClick={this.open} />\r\n        <div className=\"filter-container\">\r\n          <h2>Sort</h2>\r\n          <div>\r\n            <FontAwesomeIcon icon={faCheckSquare} size=\"2x\" />\r\n            <FontAwesomeIcon icon={faSquare} size=\"2x\" onClick={(e) => this.changeIcon(e, this.props.$this, 'a-z', function($this, arr){\r\n              $this.setState({\r\n                data: arr\r\n              });\r\n            })} />\r\n            <FontAwesomeIcon icon={faSortAlphaDown} size=\"2x\"/>\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon icon={faCheckSquare} size=\"2x\" />\r\n            <FontAwesomeIcon icon={faSquare} size=\"2x\" onClick={(e) => this.changeIcon(e, this.props.$this, 'z-a', function($this, arr){\r\n              $this.setState({\r\n                data: arr\r\n              });\r\n            })} />\r\n            <FontAwesomeIcon icon={faSortAlphaDownAlt} size=\"2x\"/>\r\n          </div>\r\n          <div>\r\n            <button onClick={this.close}>close</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":14,"column":20,"nodeType":"178","messageId":"179","endLine":14,"endColumn":26},{"ruleId":"176","severity":1,"message":"180","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":9},{"ruleId":"176","severity":1,"message":"181","line":92,"column":9,"nodeType":"178","messageId":"179","endLine":92,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":30,"column":29,"nodeType":"184","messageId":"185","endLine":30,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":40,"column":35,"nodeType":"188","messageId":"189","endLine":40,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":65,"column":33,"nodeType":"188","messageId":"189","endLine":65,"endColumn":35},{"ruleId":"176","severity":1,"message":"190","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":25},{"ruleId":"176","severity":1,"message":"191","line":25,"column":9,"nodeType":"178","messageId":"179","endLine":25,"endColumn":15},{"ruleId":"176","severity":1,"message":"192","line":27,"column":9,"nodeType":"178","messageId":"179","endLine":27,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":42,"column":5,"nodeType":"195","messageId":"196","endLine":157,"endColumn":6},{"ruleId":"186","severity":1,"message":"187","line":209,"column":29,"nodeType":"188","messageId":"189","endLine":209,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":222,"column":7,"nodeType":"195","messageId":"196","endLine":451,"endColumn":8},{"ruleId":"186","severity":1,"message":"187","line":236,"column":41,"nodeType":"188","messageId":"189","endLine":236,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":274,"column":41,"nodeType":"188","messageId":"189","endLine":274,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":312,"column":41,"nodeType":"188","messageId":"189","endLine":312,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":350,"column":41,"nodeType":"188","messageId":"189","endLine":350,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":388,"column":41,"nodeType":"188","messageId":"189","endLine":388,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":426,"column":41,"nodeType":"188","messageId":"189","endLine":426,"endColumn":43},{"ruleId":"182","severity":1,"message":"183","line":476,"column":16,"nodeType":"184","messageId":"185","endLine":476,"endColumn":18},{"ruleId":"176","severity":1,"message":"197","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"198","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"199","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":18},{"ruleId":"176","severity":1,"message":"190","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":30,"column":5,"nodeType":"195","messageId":"196","endLine":46,"endColumn":6},{"ruleId":"186","severity":1,"message":"187","line":54,"column":30,"nodeType":"188","messageId":"189","endLine":54,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":57,"column":14,"nodeType":"184","messageId":"185","endLine":57,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":61,"column":20,"nodeType":"184","messageId":"185","endLine":61,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":100,"column":17,"nodeType":"184","messageId":"185","endLine":100,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":102,"column":19,"nodeType":"184","messageId":"185","endLine":102,"endColumn":21},{"ruleId":"176","severity":1,"message":"197","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"200","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":15},{"ruleId":"176","severity":1,"message":"190","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":33,"column":19,"nodeType":"188","messageId":"189","endLine":33,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":34,"column":10,"nodeType":"184","messageId":"185","endLine":34,"endColumn":12},{"ruleId":"193","severity":1,"message":"194","line":47,"column":3,"nodeType":"195","messageId":"196","endLine":647,"endColumn":5},{"ruleId":"182","severity":1,"message":"183","line":676,"column":23,"nodeType":"184","messageId":"185","endLine":676,"endColumn":25},{"ruleId":"176","severity":1,"message":"201","line":717,"column":7,"nodeType":"178","messageId":"179","endLine":717,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":794,"column":11,"nodeType":"184","messageId":"185","endLine":794,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":796,"column":20,"nodeType":"184","messageId":"185","endLine":796,"endColumn":22},{"ruleId":"186","severity":1,"message":"202","line":814,"column":36,"nodeType":"188","messageId":"203","endLine":814,"endColumn":38},{"ruleId":"182","severity":1,"message":"183","line":822,"column":19,"nodeType":"184","messageId":"185","endLine":822,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":824,"column":26,"nodeType":"184","messageId":"185","endLine":824,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":826,"column":26,"nodeType":"184","messageId":"185","endLine":826,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":828,"column":26,"nodeType":"184","messageId":"185","endLine":828,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":851,"column":24,"nodeType":"184","messageId":"185","endLine":851,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":852,"column":12,"nodeType":"206","endLine":852,"endColumn":78},{"ruleId":"204","severity":1,"message":"205","line":856,"column":19,"nodeType":"206","endLine":856,"endColumn":69},{"ruleId":"186","severity":1,"message":"207","line":22,"column":28,"nodeType":"208","messageId":"203","endLine":22,"endColumn":36},{"ruleId":"186","severity":1,"message":"209","line":27,"column":18,"nodeType":"208","messageId":"189","endLine":27,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":29,"column":19,"nodeType":"184","messageId":"185","endLine":29,"endColumn":21},{"ruleId":"186","severity":1,"message":"207","line":15,"column":28,"nodeType":"208","messageId":"203","endLine":15,"endColumn":36},{"ruleId":"176","severity":1,"message":"197","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"210","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"211","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":43,"column":30,"nodeType":"188","messageId":"189","endLine":43,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":46,"column":14,"nodeType":"184","messageId":"185","endLine":46,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":50,"column":20,"nodeType":"184","messageId":"185","endLine":50,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":173,"column":5,"nodeType":"195","messageId":"196","endLine":189,"endColumn":6},{"ruleId":"212","severity":1,"message":"213","line":8,"column":1,"nodeType":"214","endLine":8,"endColumn":139},{"ruleId":"186","severity":1,"message":"187","line":6,"column":22,"nodeType":"188","messageId":"189","endLine":6,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":13,"column":14,"nodeType":"184","messageId":"185","endLine":13,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":36,"column":23,"nodeType":"188","messageId":"189","endLine":36,"endColumn":25},{"ruleId":"176","severity":1,"message":"215","line":43,"column":13,"nodeType":"178","messageId":"179","endLine":43,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":46,"column":17,"nodeType":"184","messageId":"185","endLine":46,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":60,"column":20,"nodeType":"184","messageId":"185","endLine":60,"endColumn":22},{"ruleId":"176","severity":1,"message":"216","line":8,"column":10,"nodeType":"178","messageId":"179","endLine":8,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":45,"column":25,"nodeType":"184","messageId":"185","endLine":45,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":54,"column":5,"nodeType":"195","messageId":"196","endLine":108,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":56,"column":16,"nodeType":"184","messageId":"185","endLine":56,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":63,"column":23,"nodeType":"184","messageId":"185","endLine":63,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":75,"column":16,"nodeType":"184","messageId":"185","endLine":75,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":82,"column":23,"nodeType":"184","messageId":"185","endLine":82,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":92,"column":16,"nodeType":"184","messageId":"185","endLine":92,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":99,"column":23,"nodeType":"184","messageId":"185","endLine":99,"endColumn":25},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'searchInput' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FontAwesomeIcon' is defined but never used.","'offset' is assigned a value but never used.","'baseURL' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Api' is defined but never used.","'Loading' is defined but never used.","'SearchBar' is defined but never used.","'List2' is defined but never used.","'stories' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","Array.prototype.map() expects a return value from function.","'faCaretUp' is defined but never used.","'faCaretDown' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","'faTimesCircle' is defined but never used.","no-global-assign","no-unsafe-negation"]